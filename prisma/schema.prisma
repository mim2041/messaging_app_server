generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  user_type UserType
  password String

  // Relations
  customerOrders       Order[] @relation("customerRelation")
  deliveryPersonOrders Order[] @relation("deliveryPersonRelation")
  chatInstancesAsCustomer ChatInstance[] @relation("customerChatRelation")
  chatInstancesAsDeliveryPerson ChatInstance[] @relation("deliveryPersonChatRelation")
  chatContents         ChatContent[] @relation("senderRelation")
}

enum UserType {
  customer
  delivery_person
}

model Order {
  id               Int      @id @default(autoincrement()) 
  customer_id      Int
  delivery_person_id Int

  // Relations
  customer       User @relation("customerRelation", fields: [customer_id], references: [id])
  deliveryPerson User @relation("deliveryPersonRelation", fields: [delivery_person_id], references: [id])
  chatInstances  ChatInstance[]

  // Indexes for foreign key fields
  @@index([customer_id])
  @@index([delivery_person_id])
}

model ChatInstance {  // renamed to PascalCase for consistency
  id                Int      @id @default(autoincrement())
  order_id          Int
  customer_id       Int
  delivery_person_id Int
  created_at        DateTime @default(now())
  is_active         Boolean  @default(false)

  // Relations
  order          Order @relation(fields: [order_id], references: [id])
  customer       User  @relation("customerChatRelation", fields: [customer_id], references: [id])
  deliveryPerson User  @relation("deliveryPersonChatRelation", fields: [delivery_person_id], references: [id])
  chatContents   ChatContent[]

  // Indexes for foreign key fields
  @@index([order_id])
  @@index([customer_id])
  @@index([delivery_person_id])
}

model ChatContent {  // renamed to PascalCase for consistency
  id         Int      @id @default(autoincrement())
  chat_id    Int
  sender_id  Int
  sent_text  String
  attachment String?  // Optional field for attachments
  sent_at    DateTime @default(now())
  is_unread  Boolean  @default(true)

  // Relations
  chatInstance ChatInstance @relation(fields: [chat_id], references: [id])
  sender       User         @relation("senderRelation", fields: [sender_id], references: [id])

  // Indexes for foreign key fields
  @@index([chat_id])
  @@index([sender_id])
}
